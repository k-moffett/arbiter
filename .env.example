# Arbiter Environment Configuration
# Copy this file to .env and update with your values

# ==================================================================
# Logging Configuration
# ==================================================================
# Log prefix to differentiate Arbiter logs from Ollama/other services
LOG_PREFIX=[ARBITER]

# Log format: 'text' for human-readable, 'json' for structured logging
# Use 'json' for parsing with jq or log aggregators
LOG_FORMAT=text

# Log level: DEBUG, INFO, WARN, ERROR, FATAL
LOG_LEVEL=INFO

# Enable colored output in console logs (true/false)
LOG_USE_COLORS=true

# Force console logger even in production (true/false)
LOG_TO_CONSOLE=false

# ==================================================================
# Ollama Configuration
# ==================================================================
# Ollama server URL
OLLAMA_BASE_URL=http://localhost:11434

# Enable Ollama debug logging (true/false)
# Note: Ollama logs are separate from Arbiter logs
OLLAMA_DEBUG=false

# LLM model for chat/completions
LLM_MODEL=llama3.1:8b

# Embedding model for vector search
EMBEDDING_MODEL=nomic-embed-text

# Model warming - Pre-load models into memory after startup (true/false)
# This reduces first-request latency but increases startup time
# Recommended: true for production, false for development
OLLAMA_WARM_MODELS=true

# ==================================================================
# MCP Server Configuration
# ==================================================================
# MCP Server URL
MCP_SERVER_URL=http://localhost:3100

# Transport type: stdio or streamable-http
TRANSPORT=streamable-http

# HTTP port for MCP server
MCP_HTTP_PORT=3100

# Maximum concurrent requests
MAX_CONCURRENT_REQUESTS=50

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# ==================================================================
# Qdrant Configuration
# ==================================================================
# Qdrant vector database URL
QDRANT_URL=http://localhost:6333

# Optional Qdrant API key (leave empty for no auth)
QDRANT_API_KEY=

# ==================================================================
# Node.js Configuration
# ==================================================================
# Environment: development, production, local
NODE_ENV=development

# Node memory options
NODE_OPTIONS=--max-old-space-size=2048

# ==================================================================
# Agent Orchestrator Configuration
# ==================================================================
AGENT_ORCHESTRATOR_URL=http://localhost:3200

# ==============================================================================
# CLI Customization
# ==============================================================================
# Customize the appearance and behavior of the interactive CLI client
# Usage: Set these variables before running: npm run cli

# CLI Welcome Banner
# Title displayed in ASCII art at startup (default: "Arbiter CLI")
CLI_WELCOME_TITLE=Arbiter CLI

# Subtitle message shown below the banner (default: "Context-Aware AI Agent")
CLI_WELCOME_MESSAGE=Context-Aware AI Agent

# Visual Settings
# Enable gradient colors for the welcome banner (default: "true")
# Set to "false" for simpler terminals or accessibility
CLI_USE_GRADIENT=true

# Gradient theme for the welcome banner (default: "pastel")
# Options: "pastel", "gold-black", "gold"
#   - pastel: Soft rainbow gradient (default)
#   - gold-black: Gold to black gradient (on-brand theme)
#   - gold: Pure gold gradient (bright to dark gold)
CLI_GRADIENT_THEME=pastel

# Session Statistics
# Show message count and average response time after each message (default: "false")
# Set to "true" to show statistics, or use /stats command to toggle during session
CLI_SHOW_STATS=false

# Terminal Compatibility Settings
# Force color support even when not detected (useful for PowerShell/WSL)
# Options: "true", "false" (default: auto-detect)
# CLI_FORCE_COLOR=true

# Override terminal width detection (useful for non-TTY or Docker environments)
# Specify number of columns (default: auto-detect, fallback to 100)
# CLI_TERMINAL_WIDTH=100

# Disable ASCII art and use plain text only (maximum compatibility)
# Options: "true", "false" (default: "false")
# Use this if ASCII art doesn't render properly in your terminal
# CLI_ASCII_ONLY=true

# Examples:
# Custom branding:
#   CLI_WELCOME_TITLE=My Custom Bot
#   CLI_WELCOME_MESSAGE=Powered by Ollama & Qdrant
#
# Gold and black theme (on-brand):
#   CLI_GRADIENT_THEME=gold-black
#
# PowerShell/WSL compatibility mode:
#   CLI_FORCE_COLOR=true
#   CLI_TERMINAL_WIDTH=100
#
# Maximum compatibility (plain text only):
#   CLI_ASCII_ONLY=true
#   CLI_USE_GRADIENT=false
#
# Minimal mode (no gradients or stats):
#   CLI_USE_GRADIENT=false
#   CLI_SHOW_STATS=false