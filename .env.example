# ===== DISCORD CONFIGURATION (OPTIONAL) =====
# Your Discord bot token from https://discord.com/developers/applications
DISCORD_TOKEN=""

# Command prefix for the bot (default: !)
DISCORD_PREFIX="!"

# ===== ENVIRONMENT SETTINGS =====
# Environment mode: development | production | test (default: development)
NODE_ENV="development"

# Log level: trace | debug | info | warn | error | fatal (default: info)
LOG_LEVEL="info"

# Pretty print logs in development (default: true)
LOG_PRETTY="true"

# ===== AI CONFIGURATION =====
# Anthropic API key for Claude integration
ANTHROPIC_API_KEY=""

# Anthropic model to use (default: claude-3-haiku-20240307)
ANTHROPIC_MODEL="claude-3-haiku-20240307"

# Maximum tokens for AI responses (default: 1000)
AI_MAX_TOKENS="1000"

# ===== VECTOR DATABASE CONFIGURATION =====
# Qdrant Vector Database
QDRANT_HOST="localhost"
QDRANT_PORT="6333"
QDRANT_HTTPS="false"
QDRANT_API_KEY=""

# Vector collection name (user-defined)
VECTOR_COLLECTION_NAME="knowledge-base"

# Embedding model configuration
EMBEDDING_MODEL="text-embedding-ada-002"
EMBEDDING_DIMENSIONS="1536"
EMBEDDING_PROVIDER="openai"  # openai | ollama | custom

# OpenAI for embeddings (if using EMBEDDING_PROVIDER=openai)
OPENAI_API_KEY=""

# Ollama for embeddings (if using EMBEDDING_PROVIDER=ollama)
OLLAMA_HOST="localhost"
OLLAMA_PORT="11434"
OLLAMA_MODEL="nomic-embed-text"
OLLAMA_BASE_URL="http://localhost:11434"

# ===== MCP SERVER CONFIGURATION =====
# MCP Server transport type: stdio | streamable-http (default: streamable-http)
TRANSPORT="streamable-http"

# MCP Server HTTP port (default: 3100)
MCP_HTTP_PORT="3100"

# MCP Server URL for clients (Docker: http://mcp-server:3100)
MCP_SERVER_URL="http://localhost:3100"

# Maximum concurrent requests (default: 50)
MAX_CONCURRENT_REQUESTS="50"

# Request timeout in milliseconds (default: 30000)
REQUEST_TIMEOUT="30000"

# Agent orchestrator URL (default: http://localhost:3200)
AGENT_ORCHESTRATOR_URL="http://localhost:3200"

# LLM Model for completions (default: llama3.1:8b)
LLM_MODEL="llama3.1:8b"

# ===== DATA SOURCE CONFIGURATION =====
# Domain name (user-defined, for metadata)
DOMAIN_NAME="My Knowledge Domain"

# Data version (user-defined, for tracking)
DATA_VERSION="1.0.0"

# PDF Sources (comma-separated URLs)
PDF_SOURCE_URLS=""
PDF_SOURCE_LABELS=""

# XML/HTML Sources
XML_SOURCE_URL=""
XML_SOURCE_BRANCH="main"
XML_SOURCE_PATH=""

# Web scraping sources
WEB_SCRAPE_URLS=""
WEB_SCRAPE_SELECTORS=""

# ===== CONTEXT MANAGEMENT CONFIGURATION =====
# Path to store context data (default: ./data/contexts)
CONTEXT_STORAGE_PATH="./data/contexts"

# Maximum contexts to keep in memory (default: 50)
CONTEXT_MAX_CONTEXTS="50"

# Maximum messages per context (default: 100)
CONTEXT_MAX_MESSAGES="100"

# Maximum tokens per context (default: 8000)
CONTEXT_MAX_TOKENS="8000"

# Maximum age of contexts in days before cleanup (default: 7)
CONTEXT_MAX_AGE_DAYS="7"

# Context compaction strategy: hybrid | aggressive | conservative (default: hybrid)
CONTEXT_COMPACTION_STRATEGY="hybrid"

# Context persistence interval in milliseconds (default: 60000)
CONTEXT_PERSISTENCE_INTERVAL="60000"

# Session timeout in hours (default: 24)
CONTEXT_SESSION_TIMEOUT_HOURS="24"

# Enable context debug logging (default: false)
CONTEXT_DEBUG="false"

# ===== STORAGE PATHS =====
# Path to store log files (default: ./data/logs)
LOG_PATH="./data/logs"

# Path to store downloaded documents (default: ./data/documents)
DOCUMENT_STORAGE_PATH="./data/documents"

# Path to store cache (default: ./data/cache)
CACHE_STORAGE_PATH="./data/cache"

# ===== PARSER CONFIGURATION =====
# Path to parser configuration file (optional)
PARSER_CONFIG_PATH=""

# Enable parser debugging (default: false)
PARSER_DEBUG="false"

# ===== TOOL CONFIGURATION =====
# Path to tool configuration file (optional)
TOOL_CONFIG_PATH=""

# Tool execution timeout in milliseconds (default: 30000)
TOOL_TIMEOUT_MS="30000"

# ===== MEMORY MANAGEMENT =====
# Node.js memory limit in MB (default: 512)
NODE_OPTIONS="--max-old-space-size=512"

# Enable memory monitoring (default: false)
ENABLE_MEMORY_MONITOR="false"

# Memory check interval in milliseconds (default: 60000)
MEMORY_CHECK_INTERVAL_MS="60000"

# Memory threshold warning percentage (default: 85)
MEMORY_THRESHOLD_WARNING="85"

# Memory threshold critical percentage (default: 95)
MEMORY_THRESHOLD_CRITICAL="95"

# ===== DOCKER CONFIGURATION (AUTO-DETECTED) =====
# Indicates if running in Docker container (auto-detected, don't set manually)
# DOCKER_CONTAINER="true"

# Docker network name (default: arbiter-network)
DOCKER_NETWORK="arbiter-network"

# Container name (default: arbiter)
CONTAINER_NAME="arbiter"

# ===== DEPLOYMENT CONFIGURATION (OPTIONAL) =====
# Deployment environment: development | staging | production
DEPLOY_ENV="development"

# ===== TESTING CONFIGURATION =====
# Test timeout in milliseconds (default: 5000)
TEST_TIMEOUT="5000"

# Test log level: error | warn | info | debug (default: error)
TEST_LOG_LEVEL="error"

# ===== IMPORTANT NOTES =====
# 1. This is a domain-agnostic system - all domain-specific configuration
#    should be provided through environment variables or configuration files.
#
# 2. For Docker development:
#    - Set QDRANT_HOST="qdrant" (Docker service name)
#    - Set OLLAMA_HOST="ollama" (if using Ollama in Docker)
#
# 3. For local development:
#    - Keep QDRANT_HOST="localhost"
#    - Keep OLLAMA_HOST="localhost" or use OpenAI
#
# 4. Required fields depend on your use case:
#    - DISCORD_TOKEN: Required if using Discord interface
#    - ANTHROPIC_API_KEY: Required for AI features
#    - QDRANT_*: Required for vector search
#    - EMBEDDING_*: Required for document ingestion
#
# 5. Security:
#    - Never commit .env with actual values to version control
#    - Use strong, unique values for production deployments
#    - Rotate API keys and tokens regularly
