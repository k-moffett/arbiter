# Multi-stage Dockerfile for Arbiter CLI Client
# Interactive terminal interface for chatting with the agent
# Targets: development, builder, production

# =============================================================================
# Stage 1: Development
# =============================================================================
FROM node:22-alpine AS development

LABEL maintainer="Arbiter CLI Client"
LABEL description="Development environment for CLI chat interface"

WORKDIR /app

# Install system dependencies including readline support
RUN apk add --no-cache \
    curl \
    bash \
    ncurses \
    readline

# Copy package files
COPY package*.json ./

# Install all dependencies (dev + production)
RUN npm ci

# Copy source code (for hot reload in development)
COPY src/ ./src/
COPY tsconfig.json ./

# Set Node.js memory limits
ENV NODE_OPTIONS="--max-old-space-size=1024"

# No health check for interactive CLI

# Default command for development
CMD ["npx", "tsx", "src/_clients/cli/cli.ts"]

# =============================================================================
# Stage 2: Builder
# =============================================================================
FROM node:22-alpine AS builder

LABEL description="Build stage for TypeScript compilation"

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies needed for building
RUN npm ci

# Copy source code
COPY src/ ./src/
COPY tsconfig.json ./

# Build TypeScript to JavaScript
RUN npm run build

# =============================================================================
# Stage 3: Production
# =============================================================================
FROM node:22-alpine AS production

LABEL description="Production runtime for Arbiter CLI"

WORKDIR /app

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Install runtime dependencies including readline
RUN apk add --no-cache \
    curl \
    ncurses \
    readline

# Copy built artifacts from builder stage
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package*.json ./

# Create .arbiter directory for persistent user ID with correct permissions
RUN mkdir -p /app/.arbiter && chown nodejs:nodejs /app/.arbiter

# Switch to non-root user
USER nodejs

# No health check for interactive CLI

# Production command
CMD ["node", "dist/_clients/cli/cli.js"]
